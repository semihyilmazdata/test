//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("SERVER_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserStatus {
  INVITED
  VERIFIED
}

/// @@auth
/// @@allow('all', auth().id == this.id)
/// @@allow('all', auth().globalRole == 'ADMIN')
/// @@allow('create', globalRole != 'ADMIN')
/// @@allow('read', true)
model User {
  id              String       @id() @default(uuid())
  name            String?
  email           String?      @unique()
  pictureUrl      String?      @default("https://i.imgur.com/ZdJSK3Y.jpeg")
  tokenInvitation String?
  status          UserStatus   @default(VERIFIED)
  globalRole      String       @default("USER")
  /// @password
  /// @omit
  password        String?
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @default(now()) @updatedAt()
  restaurants     Restaurant[] @relation("user")
}

/// @@allow('all', true)
model Restaurant {
  id          String     @id() @default(uuid())
  name        String?
  description String?
  address     String?
  status      String?
  logoUrl     String?
  userId      String?
  user        User?      @relation(fields: [userId], references: [id], name: "user")
  menuItems   MenuItem[] @relation("restaurant")
  showcases   Showcase[] @relation("restaurant")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now()) @updatedAt()
}

/// @@allow('all', true)
model MenuItem {
  id                   String                @id() @default(uuid())
  name                 String?
  description          String?
  price                String?
  category             String?
  imageUrl             String?
  arModelUrl           String?
  isPublished          Boolean
  arScale              String?
  arPosition           String?
  restaurantId         String?
  restaurant           Restaurant?           @relation(fields: [restaurantId], references: [id], name: "restaurant")
  customerInteractions CustomerInteraction[] @relation("menuItem")
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @default(now()) @updatedAt()
}

/// @@allow('all', true)
model CustomerInteraction {
  id              String    @id() @default(uuid())
  interactionType String?
  deviceType      String?
  sessionId       String?
  timestamp       String
  menuItemId      String?
  menuItem        MenuItem? @relation(fields: [menuItemId], references: [id], name: "menuItem")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now()) @updatedAt()
}

/// @@allow('all', true)
model Showcase {
  id           String      @id() @default(uuid())
  title        String?
  description  String?
  imageUrl     String?
  featured     Boolean
  restaurantId String?
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id], name: "restaurant")
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @default(now()) @updatedAt()
}
